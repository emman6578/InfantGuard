// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "postgresql"
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  auth           Auth?
  fullname       String
  contact_number String  @unique
  baranggay      String
  image          String?
  role           Role    @default(User)

  created   DateTime  @default(now())
  updated   DateTime  @updatedAt
  lastLogin DateTime?

  Token Token[]
}

model Auth {
  id String @id @default(uuid())

  email String @unique

  User    User   @relation(fields: [User_id], references: [id], onDelete: Cascade)
  User_id String @unique

  created DateTime @default(now())
  updated DateTime @updatedAt
}

model Token {
  id String @id @default(uuid())

  type       Type     @default(EMAIL) // EMAIL || API
  emailToken String?  @unique
  valid      Boolean  @default(true)
  expiration DateTime

  User    User?   @relation(fields: [User_id], references: [id], onDelete: Cascade)
  User_id String?

  created DateTime @default(now())
  updated DateTime @updatedAt
}

enum Type {
  EMAIL
  API
}

enum Role {
  User
  Admin
}
